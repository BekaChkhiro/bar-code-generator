{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\user\\\\Desktop\\\\Bar Code Generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Barcode from 'react-barcode';\nimport { toPng, toJpeg, toSvg } from 'html-to-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [barcodeValue, setBarcodeValue] = useState('');\n  const barcodeRef = useRef();\n  const handleInputChange = e => {\n    const value = e.target.value;\n    if (/^\\d*$/.test(value)) {\n      setBarcodeValue(value);\n    }\n  };\n  const downloadImage = async format => {\n    if (!barcodeValue) return;\n    try {\n      let dataUrl;\n      switch (format) {\n        case 'PNG':\n          dataUrl = await toPng(barcodeRef.current);\n          break;\n        case 'JPG':\n          dataUrl = await toJpeg(barcodeRef.current);\n          break;\n        case 'SVG':\n          dataUrl = await toSvg(barcodeRef.current);\n          break;\n        default:\n          return;\n      }\n      const link = document.createElement('a');\n      link.download = `barcode-${barcodeValue}.${format.toLowerCase()}`;\n      link.href = dataUrl;\n      link.click();\n    } catch (err) {\n      console.error('Error exporting barcode:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-900 mb-8\",\n          children: \"\\u10D1\\u10D0\\u10E0\\u10D9\\u10DD\\u10D3\\u10D8\\u10E1 \\u10D2\\u10D4\\u10DC\\u10D4\\u10E0\\u10D0\\u10E2\\u10DD\\u10E0\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: barcodeValue,\n            onChange: handleInputChange,\n            placeholder: \"\\u10E8\\u10D4\\u10D8\\u10E7\\u10D5\\u10D0\\u10DC\\u10D4\\u10D7 \\u10EA\\u10D8\\u10E4\\u10E0\\u10D4\\u10D1\\u10D8\",\n            className: \"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), barcodeValue && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: barcodeRef,\n            className: \"flex justify-center p-4 bg-white\",\n            children: /*#__PURE__*/_jsxDEV(Barcode, {\n              value: barcodeValue,\n              format: \"CODE128\",\n              width: 2,\n              height: 100,\n              displayValue: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center space-x-4\",\n            children: ['PNG', 'JPG', 'SVG'].map(format => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => downloadImage(format),\n              className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n              children: [format, \"-\\u10D0\\u10D3 \\u10E8\\u10D4\\u10DC\\u10D0\\u10EE\\u10D5\\u10D0\"]\n            }, format, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2rG/xU+kqm34g1wj2aYS0kr91XU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Barcode","toPng","toJpeg","toSvg","jsxDEV","_jsxDEV","App","_s","barcodeValue","setBarcodeValue","barcodeRef","handleInputChange","e","value","target","test","downloadImage","format","dataUrl","current","link","document","createElement","download","toLowerCase","href","click","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","ref","width","height","displayValue","map","onClick","_c","$RefreshReg$"],"sources":["c:/Users/user/Desktop/Bar Code Generator/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Barcode from 'react-barcode';\nimport { toPng, toJpeg, toSvg } from 'html-to-image';\n\nfunction App() {\n  const [barcodeValue, setBarcodeValue] = useState('');\n  const barcodeRef = useRef();\n  \n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    if (/^\\d*$/.test(value)) {\n      setBarcodeValue(value);\n    }\n  };\n\n  const downloadImage = async (format) => {\n    if (!barcodeValue) return;\n    \n    try {\n      let dataUrl;\n      switch (format) {\n        case 'PNG':\n          dataUrl = await toPng(barcodeRef.current);\n          break;\n        case 'JPG':\n          dataUrl = await toJpeg(barcodeRef.current);\n          break;\n        case 'SVG':\n          dataUrl = await toSvg(barcodeRef.current);\n          break;\n        default:\n          return;\n      }\n      \n      const link = document.createElement('a');\n      link.download = `barcode-${barcodeValue}.${format.toLowerCase()}`;\n      link.href = dataUrl;\n      link.click();\n    } catch (err) {\n      console.error('Error exporting barcode:', err);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl p-8\">\n        <div className=\"text-center\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">ბარკოდის გენერატორი</h1>\n          \n          <div className=\"mb-8\">\n            <input\n              type=\"text\"\n              value={barcodeValue}\n              onChange={handleInputChange}\n              placeholder=\"შეიყვანეთ ციფრები\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n\n          {barcodeValue && (\n            <div className=\"space-y-6\">\n              <div ref={barcodeRef} className=\"flex justify-center p-4 bg-white\">\n                <Barcode\n                  value={barcodeValue}\n                  format=\"CODE128\"\n                  width={2}\n                  height={100}\n                  displayValue={true}\n                />\n              </div>\n\n              <div className=\"flex justify-center space-x-4\">\n                {['PNG', 'JPG', 'SVG'].map((format) => (\n                  <button\n                    key={format}\n                    onClick={() => downloadImage(format)}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n                  >\n                    {format}-ად შენახვა\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}